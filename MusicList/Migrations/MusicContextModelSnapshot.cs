// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicList.Models;

#nullable disable

namespace MusicList.Migrations
{
    [DbContext(typeof(MusicContext))]
    partial class MusicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicList.Models.Music", b =>
                {
                    b.Property<int>("MusicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusicId"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("MusicId");

                    b.ToTable("Music");

                    b.HasData(
                        new
                        {
                            MusicId = 1,
                            Artist = "Artist 1",
                            Rating = 4,
                            Title = "Song Title 1",
                            Year = 2000
                        },
                        new
                        {
                            MusicId = 2,
                            Artist = "Artist 2",
                            Rating = 5,
                            Title = "Song Title 2",
                            Year = 2010
                        });
                });

            modelBuilder.Entity("MusicList.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int?>("MusicId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongId");

                    b.HasIndex("MusicId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            Duration = new TimeSpan(0, 0, 3, 30, 0),
                            Title = "Song Title 1"
                        },
                        new
                        {
                            SongId = 2,
                            Duration = new TimeSpan(0, 0, 4, 15, 0),
                            Title = "Song Title 2"
                        });
                });

            modelBuilder.Entity("MusicList.Models.Song", b =>
                {
                    b.HasOne("MusicList.Models.Music", null)
                        .WithMany("Songs")
                        .HasForeignKey("MusicId");
                });

            modelBuilder.Entity("MusicList.Models.Music", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
